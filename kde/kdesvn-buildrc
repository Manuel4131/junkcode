# Sample configuration file for kdesvn-build.
#
# To use this sample configuration file, copy it to ~/.kdesvn-buildrc, and then
# edit it to suit your desires.

# Global settings go in this section.  They apply to every module unless
# overridden later.
global

# This option controls whether KDE 3.5 or KDE 4.0 is compiled.  If you set this
# option to true, kdesvn-build will automatically select the correct branch of
# a module needed to build KDE 3.5 in most cases.  Most modules will come from
# the 3.5 branch, arts will come from 1.5, and qt-copy will come from 3.3.
#
# It is always possible to override the default by using the branch, tag, or
# override-url option yourself.
#
# If you set this option to false, or leave it unset, kdesvn-build will build
# /trunk, which corresponds right now with KDE 4.0.  If you set this option to
# true, you should also comment out or remove the branch option which is set
# in the "module kdelibs" section below.
#
#	use-stable-kde false

# binpath controls the value of the PATH environment variable during
# compilation.  If you have unusual tools that need to be in the path to build
# KDE, add them here.  KDE's and Qt's programs are automatically added.
# If you leave this option blank, it will default to the PATH that kdesvn-build had
# when it was started.
#	binpath /bin:/usr/bin:/usr/local/bin:/usr/X11R6/bin
#	binpath /usr/lib/ccache/bin:/bin:/usr/bin:/usr/local/bin:/usr/X11R6/bin

# This is the directory that your KDE sources are downloaded to.  This
# directory also holds the build and log directories by default.
#	source-dir ~/kdesvn

# This directory is where everything gets built before it is installed.  By
# default it is relative to the value for source-dir.  You can specify an
# absolute path if you'd like (begin the path with a slash).
#	build-dir build

# This is the directory that KDE will end up installed at.  The default is
# appropriate for a single-user installation of KDE, which requires no root
# permissions.  If you'd like, you can install and use the sudo program to
# install KDE anywhere on your system, in conjunction with the
# make-install-prefix option.
#	kdedir ~/kde
#
# You can overwrite the installation directory for a given module using
# the per-module "prefix" option. Note that when doing this you need to
# set KDEDIRS, PATH and LD_LIBRARY_PATH to point to both directories,
# and that you should use separate test users or KDEHOME values to separate
# the ksycoca databases. Only set prefix if you know what you're doing.

# If you would like install KDE to the system (DO NOT INSTALL *over* a prior
# installation!), then you'll probably need to use sudo to install everything.
#
# The -S parameter causes sudo to read from standard input (which is redirected
# by kdesvn-build).  This means that if sudo has to ask for your password, it
# will fail, you need to configure sudo to be able to run "make install" and
# "unsermake install" without requesting a password.
#
# In addition, you can run kdesvn-build --no-install, and then
# sudo kdesvn-build --install if you are unable to configure sudo to allow
# make install with no password.
#	 make-install-prefix sudo -S

# This is the Qt installation to use to build KDE.  The default is qt-copy
# from Subversion.  The ${build-dir} option uses whatever you set for
# build-dir to automatically fill in the value.
# For qt-copy users, this is also the directory to install qt-copy to.
# KDE 4.0 may require qt-copy at times instead of a released Qt so it is
# better to use qt-copy for /trunk users.
#	qtdir ~/qt4  # Default to installing Qt (Qt 4).
#	qtdir ${build-dir}/build/qt-copy # Use built Qt (Qt 3).

# You might want to use your system's built-in Qt already (4.4 or greater for
# KDE 4, 3.3.x for KDE 3.5.)  If so, assign the qtdir option appropriately.
	qtdir /usr/include/qt4

# This is the Subversion server to download the KDE sources from.  Developers:
# Don't forget to add your username to the URL if necessary!
#	svn-server svn://anonsvn.kde.org/home/kde

# This controls the configure flags passed to every module (except qt-copy) by
# default.  If you have module-specific configure flags, they will be placed
# after these flags to allow the module setting to override the global setting.
# This setting only applies to KDE 3 modules.
#	configure-flags --enable-debug

# KDE 4 uses CMake.  The equivalent to configure-flags is cmake-options.  BUT
# the same options will not work, CMake expects them in a different format.
# You should probably not need to use cmake-options however. KDE4_BUILD_TESTS
# is provided as an example.
#
# NOTE: If you want the cxxflags option below to work (advanced users only)
# then make sure to set the "-DCMAKE_BUILD_TYPE=none" here, or in the specific
# module's cmake-options
#
# Also see http://techbase.kde.org/Development/Tutorials/CMake#Command_Line_Variables
#	cmake-options -DKDE4_BUILD_TESTS:BOOL=ON
#	cmake-options -DCMAKE_BUILD_TYPE=RelWithDebInfo
	cmake-options -DCMAKE_BUILD_TYPE=Release

# These are the compilation flags to use by default when compiling KDE.
# gcc supports a -march option in order to generate specific code for pentium4, athlon-xp,
# etc.  See the gcc man page for more information.
#
# NOTE: For KDE 4 these flags are only applied if you set the CMAKE_BUILD_TYPE setting
# to "none" (see the cmake-options setting)
#
#	cxxflags -pipe -march=i686 # For standard 32-bit systems.

# KDE has one of the most extensive translation packages in the world.  They
# are stored in the l10n module.  kdesvn-build can automatically try to build
# and install languages for you, using this parameter.  It should be a list
# of languages to build and install.  This option requires the language code
# as present in l10n.  You can look these codes up at
# http://i18n.kde.org/teams/
#	kde-languages de        # German
#	kde-languages fr        # French
#	kde-languages en_GB cs  # British English and Czech

# These are the default options passed to the make command.  The default tries
# to build with 2 parallel compiles.  If you are using distcc or have SMP, you
# should experiment with setting this value higher for best performance.
	make-options -j3

# These are the default options passed to unsermake, which supports some
# options not present with make.  The default tries to run 2 compile jobs
# in parallel.  The -p option is used to display progress information.
# unsermake can only be used with KDE 3.
#	unsermake-options --compile-jobs=2 -p

# unsermake is used by default for KDE 3 modules.  However, you may get tired
# of kdesvn-build updating unsermake all the time.  In that case, uncomment the
# following. NOTE: You are responsible for updating unsermake after that by
# going to its directory and running 'svn up' when needed.  If you have not yet
# downloaded unsermake let kdesvn-build update it before uncommenting.
#	use-unsermake self

# You can use the set-env option to add values to the build environment.
	set-env LDFLAGS -Wl,-O3   # Optimize the linker, takes longer.

# If you use software which requires pkg-config, and you need to add entries
# to your pkg-config path, you can also use set-env for that.  Some broken
# systems require you to set this to find e.g. glib.
#	set-env PKG_CONFIG_PATH /opt/gnome/lib/pkgconfig
end global

# qt-copy is a copy of Trolltech's Qt, optionally with some bugfixes and
# optimizations added.  It is the easiest way to get Qt if you don't already
# have it (and you don't want to use your distro's tools to install it.)
#module qt-copy
#	Configure flags.  If you use Qt 3, then uncomment the lines
#	below the Qt 3 option line (by removing the # at the beginning) and
#	comment the Qt 4 lines which follow.
#	configure-flags -qt-gif -no-exceptions -fast -qdbus \
#	                -nomake examples -nomake demos \
#	                -no-phonon # Phonon built separately

#	QT 3 OPTIONS
#	configure-flags -system-zlib -qt-gif -system-libjpeg -system-libpng \
#	                -no-exceptions -fast -thread -debug
#	make-options -j2 sub-src sub-tools # Build faster, no examples built

#	apply-qt-patches true          # Works with Qt 3 and 4, recommended as well.
#	make-options -j2
#end module

# arts is the KDE sound library.  It is not expected to be used by the time
# KDE 4 is released.
#module arts
#end module

# kdesupport contains taglib and QCA, and the Strigi library required for
# kdelibs in KDE 4.  taglib is required for JuK, amarok, and the meta info
# reader for music files in Konqueror.
# kdesupport is also the bearer of automoc and all that is good and right with
# CMake, install it before all KDE modules.
module kdesupport
end module

# Phonon is the multimedia interface for KDE 4.  It is developed in kdesupport
# but a separate branch is available for stability.  It may also be included
# with Qt. KDE trunk depends on phonon trunk, so disable it for now.
# You can do phonon trunk if you'd like but it's included in kdesupport trunk
# anyways.
#module phonon
#    branch 4.2
#end module

# kdelibs are the base KDE libraries needed by all KDE applications.
module kdelibs
	# KDE 3 syntax:
	# configure-flags --enable-sendfile --enable-mitshm

	# KDE 4 uses CMake, if you need to pass options to the cmake command, use this
	# option:
	# cmake-options -DKDE4_BUILD_TESTS:BOOL=ON

# If you're a programmer you may want to build the API docs.  There is a
# separate script in kdesdk/scripts to do that for you however.
end module

# If you are not using KDE 4 then uncomment or remove this module.  It is required
# before kdebase in KDE 4.
module kdepimlibs
end module

# kdebase contains useful general-purpose programs, normally people would
# expect a usable desktop to have these.
module kdebase
	#configure-flags --with-pam --with-shadow
end module

# kdemultimedia contains JuK, noatun, Kaboodle, and other KDE multimedia
# applications.  It does not include amarok, which is in extragear/multimedia
module kdemultimedia
	checkout-only kmix libkcddb
end module

# ... Well, they're games. ;)
#module kdegames
#end module

## Note: The following modules may not have been ported to KDE 4 yet, and may
#  have changed significantly from their KDE 3 counterparts as well.  Because
#  of this, they are commented out, uncomment it if you want to build it.

# kdesdk is a useful module for software developers.  It is where kdesvn-build
# is developed.
module kdesdk
	checkout-only kate
end module

# kdenetwork has Kopete and other useful applications for the Internet and
# other networks.
module kdenetwork
	checkout-only kget kopete
end module

# kdeadmin has system administration tools for your computer.
#module kdeadmin
#    KDE3 configure flags:
#    configure-flags --with-shadow --with-pam=yes
#end module

# kdebindings is useful for software developers, and for those who wish to run
# some KDE programs that don't use C++.  The python bindings are not included
# by default as they never build for me.  If you'd like to build all the
# bindings, comment out the checkout-only option below.
#
# This module appears to be on its way to being ported to Qt 4, stay tuned.
#module kdebindings
#    checkout-only admin dcopc kalyptus smoke qtruby korundum kjsembed dcoppython

#   kdebindings will probably need to use the following option to install successfully.
#   You must configure the sudo program first to allow for passwordless operation.
#   make-install-prefix sudo
#end module

# kdepim contains KMail, Kontact, KOrganizer, and other insanely useful
# programs that help you keep track of things.
#module kdepim
#    KDE3 configure flags:
#    configure-flags --disable-exchange
#end module

# kdeutils has miscellaneous programs which can be useful.  You probably won't
# die if you remove this from the config file though.
module kdeutils
	checkout-only ark kwallet okteta
end module

# kdegraphics contains various programs useful for graphics editing.  It
# doesn't include Krita, which is part of KOffice, but it is worth it just for
# KolourPaint and Gwenview.
module kdegraphics
	checkout-only gwenview okular ksnapshot
end module

# Contains nifty diversions of time, which generally aren't games.
#module kdetoys
#end module

# Educational programs.  Some are actually quite fun even if you're not trying
# to learn anything.
#module kdeedu
#end module

# Extra collection of useful plasma applets, runners, data engines, etc.
module kdeplasma-addons
end module

# The KDE Office Suite.  Includes a pretty expansive collection of programs.
# It is rather large, so you can cut download and build times by removing it
# from this file.
#module koffice
#	branch 1.6 # The last released version for KDE 3.
#end module

## A prerequisite for kdevelop other modules using the kdevelop platform, like
# kdewebdev
#module kdevplatform
#end module

## The KDevelop IDE, useful for developing all kinds of programs.  If you don't
# plan on being a software developer you can save time by removing this from
# your configuration.
#
# Note: KDevelop appears to have a port started towards KDE 4.  It may be
# usable by now.
#module kdevelop
#	use-unsermake false
#end module

# Includes Quanta Plus and other web design tools.
#module kdewebdev
#end module

# Modules in extragear and playground can also be added.
#
# To see what you can find in the various modules, browse
# http://websvn.kde.org/trunk/extragear and
# http://websvn.kde.org/trunk/playground

# Includes various libraries needed by other applications in extragear.
#module extragear/libs

# If you don't like the default name that kdesvn-build gives modules on-disk,
# you can use dest-dir to change it.
#	dest-dir extragear-libs
#end module

# Includes the popular K3B and Amarok programs.
module extragear/multimedia
	checkout-only k3b
end module

# Includes various photo management applications.
#module extragear/graphics
#	checkout-only digikamimageplugins digikam gwenview kimdaba
#end module

# module extragear/network
# 	# Options like checkout-only should work as before.
# 	checkout-only konversation
# end module

# module playground/games
# end module

# Add more modules as needed.
